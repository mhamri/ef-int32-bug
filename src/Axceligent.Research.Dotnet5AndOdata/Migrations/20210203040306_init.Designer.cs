// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Research.Dotnet5AndOdata.Db;

namespace Research.Dotnet5AndOdata.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210203040306_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("StoreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.BookStore", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("BooksStores");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Book", b =>
                {
                    b.HasOne("Axceligent.Research.Dotnet5AndOdata.Entities.Person", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Axceligent.Research.Dotnet5AndOdata.Entities.Store", null)
                        .WithMany("Books")
                        .HasForeignKey("StoreId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.BookStore", b =>
                {
                    b.HasOne("Axceligent.Research.Dotnet5AndOdata.Entities.Book", "Book")
                        .WithMany("BookStore")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Axceligent.Research.Dotnet5AndOdata.Entities.Store", "Store")
                        .WithMany("BookStore")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Store", b =>
                {
                    b.HasOne("Axceligent.Research.Dotnet5AndOdata.Entities.Person", "Owner")
                        .WithMany("Stores")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Book", b =>
                {
                    b.Navigation("BookStore");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Person", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Axceligent.Research.Dotnet5AndOdata.Entities.Store", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("BookStore");
                });
#pragma warning restore 612, 618
        }
    }
}
